{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","js/constants.js","js/store.js","js/renderNoteItem.js","js/shared.js","js/renderTableHeader.js","js/renderStatItem.js","js/actions.js","js/listenerFunctions.js","js/index.js"],"names":["categories","task","randomThought","idea","noteShape","id","isActive","name","created","category","content","dates","months","columnNames","columnNamesStatistic","mainTableBox","document","querySelector","activeNotesBox","archivedNotesBox","statTableBox","createNoteBtn","shiftTableBtn","notes","getNoteItemId","getFieldId","filedName","renderNoteItems","forEach","note","append","getNoteItem","noteItem","catForDataAttr","isEditable","noteCat","fieldNames","itemBox","fieldsBox","optionsArr","fieldName","cat","push","fields","map","val","toLowerCase","classList","add","setAttribute","createNoteItemControllers","getDateFromItemContent","regExp","match","length","join","setDatesField","idSelector","textContent","isEditing","controllersBox","archiveBtnTitle","editBtnIconClasses","archiveBtn","deleteBtn","editBtn","createElement","type","classes","el","Array","isArray","createItemTextField","innerText","tag","readOnly","textBox","textField","value","createItemSelect","options","optionEl","selected","box","select","option","selectCorrespondingCategoryKey","createItemCategoryIcon","icon","getIdNumFromElementIdSelector","idNum","selectNoteItemById","eventIdSelector","getElementById","selectField","columnName","idOfField","renderTableHeader","prepend","getTableHeader","shouldAddControllers","tableHeader","createColumnTitle","createColumnControllerPanel","colTitleBox","title","archiveAllBtn","deleteAllBtn","getStatItemId","getStatFieldId","state","renderStatItems","notesArray","active","archived","Object","keys","key","i","getStatisticItem","statItemBox","toggleEditNote","makeEditable","categoryField","inputsArr","getElementsByTagName","focus","parentNode","replaceWith","remove","selectedOptionText","selectedOptions","toReplaceWith","makePrevEditingItemReadOnly","prevEditing","querySelectorAll","toggleEditBtnIcon","toggleArchiving","noteItemCopy","cloneNode","deleteAllNotes","item","createNewNote","noteInfo","date","Date","getDate","getMonth","getFullYear","changeNoteCategoryWithSelect","newIcon","editBtnElement","contains","countNotesByCategory","setStatItemDataByCategory","actAndArch","toggleEditNoteOnClick","e","target","toggleEditNoteOnEvent","contentText","updateStats","stat","toggleArchivingOnClick","toggleArchivingAllOnClick","deleteNoteOnClick","setTimeout","deleteAllNotesOnClick","selectOnChange","createNewNoteOnClick","console","log","shiftBetweenActiveAndArchivedNotes","toggle","addEventListener"],"mappings":"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","file":"js.d7d743f0.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export const categories = {\n    task: 'Task',\n    randomThought: 'Random Thought',\n    idea: 'Idea'\n}\nexport const noteShape = {\n    id: null,\n    isActive: null,\n    name: '',\n    created: '',\n    category: '',\n    content: '',\n    dates: ''\n}\nexport const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n]\nexport const columnNames = ['Name', 'Created', 'Category', 'Content', 'Dates'];\nexport const columnNamesStatistic = ['Note Category', 'Active', 'Archived'];\nexport const mainTableBox = document.querySelector('.main-table-box');\nexport const activeNotesBox = document.querySelector('.active-notes');\nexport const archivedNotesBox = document.querySelector('.archived-notes');\nexport const statTableBox = document.querySelector('.stat-table');\nexport const createNoteBtn = document.querySelector('.create-note-btn');\nexport const shiftTableBtn = document.querySelector('.shift-table-btn');","import {categories} from \"./constants\";\n\nexport const notes = [\n    {\n        id: 1,\n        isActive: true,\n        name: 'Radency internship',\n        created: '4 October 2021',\n        category: categories.task,\n        content: '18/10/2021',\n        dates: '18/10/2021'\n    },\n    {\n        id: 2,\n        isActive: true,\n        name: 'Dentist',\n        created: '20 April 2021',\n        category: categories.randomThought,\n        content: 'I’m gonna have a dentist appointment on the 3/5/2021, I moved it from 5/5/2021',\n        dates: '3/5/2021, 5/5/2021'\n    },\n    {\n        id: 3,\n        isActive: false,\n        name: 'Riding a bike',\n        created: '20 April 2021',\n        category: categories.task,\n        content: 'Somehow somewhere one time',\n        dates: ''\n    },\n    {\n        id: 4,\n        isActive: true,\n        name: 'Dating with Natalya',\n        created: '5 October 2021',\n        category: categories.task,\n        content: '15/10/2021',\n        dates: '15/10/2021'\n    },\n    {\n        id: 5,\n        isActive: true,\n        name: 'Shopping List',\n        created: '20 April 2021',\n        category: categories.task,\n        content: 'Potatoes - 1kg, Milk - 1.5l, Snickers - 2',\n        dates: ''\n    },\n    {\n        id: 6,\n        isActive: true,\n        name: 'What if',\n        created: '20 April 2021',\n        category: categories.randomThought,\n        content: '...',\n        dates: ''\n    },\n    {\n        id: 7,\n        isActive: true,\n        name: 'Good idea',\n        created: '20 April 2021',\n        category: categories.idea,\n        content: 'Really good idea',\n        dates: ''\n    }\n]","import {activeNotesBox, archivedNotesBox, categories, columnNames, noteShape} from \"./constants\";\nimport {createElement, createItemCategoryIcon, createItemSelect, createItemTextField, selectField} from \"./shared\";\nimport {notes} from \"./store\";\n\nexport const getNoteItemId = (id) => `${id}__note-item`;\nexport const getFieldId = (id, filedName) => `${id}__${filedName}`;\n\n\nexport const renderNoteItems = (notesArray = notes) => {\n    let nodeToAppend;\n    notesArray.forEach(note => {\n        nodeToAppend = note.isActive ? activeNotesBox : archivedNotesBox;\n        nodeToAppend.append(getNoteItem(note));\n    });\n}\n\nexport const getNoteItem = (noteItem = noteShape, isEditable = false, noteCat = categories, fieldNames = columnNames) => {\n    const { id, category, isActive } = noteItem;\n    const itemBox = createElement('div', 'note-item', getNoteItemId(noteItem.id));\n    const fieldsBox = createElement('div', 'note-item__fields-box')\n    const optionsArr = [];\n    let fieldName = '';\n    let catForDataAttr;\n    for (let cat in noteCat) {\n        optionsArr.push(noteCat[cat]);\n        if(noteCat[cat] === category) catForDataAttr = cat;\n    }\n    const fields = fieldNames.map((val) => {\n        fieldName = val.toLowerCase();\n        if (fieldName === 'created' || fieldName === 'dates') {\n            return createItemTextField(noteItem[fieldName], getFieldId(id, fieldName), 'p')\n        } else if (fieldName === 'category' && isEditable) {\n            return createItemSelect(optionsArr, category, getFieldId(id, fieldName))\n        } else if (isEditable) {\n            return createItemTextField(noteItem[fieldName], getFieldId(id, fieldName))\n        } else if (!isEditable) {\n            return createItemTextField(noteItem[fieldName], getFieldId(id, fieldName), 'input', true)\n        }\n    })\n    fieldsBox.append(...fields);\n\n    if(isEditable) itemBox.classList.add('editable');\n    itemBox.setAttribute('data-category', catForDataAttr);\n    itemBox.append(\n        createItemCategoryIcon(category),\n        fieldsBox,\n        createNoteItemControllers(id, isActive, isEditable)\n    );\n    return itemBox;\n}\nexport const getDateFromItemContent = (content) => {\n    //Matching d/m/yy and dd/mm/yyyy date formats\n    const regExp = /(3[01]|[12][0-9]|0?[1-9])\\/(1[0-2]|0?[1-9])\\/\\d{4}/g;\n    const dates = content.match(regExp);\n    if (dates && dates.length) {\n        return dates.join(', ');\n    } else {\n        return null;\n    }\n}\nexport const setDatesField = (dates, idSelector) => {\n    const dateField = selectField(idSelector, 'Dates');\n    dateField.textContent = dates;\n}\nconst createNoteItemControllers = (id, isActive = true, isEditing = false) => {\n    const controllersBox = createElement('div', 'note-item__controllers-box');\n    const archiveBtnTitle = isActive ? 'Archive Note' : 'Unzip';\n    const editBtnIconClasses = isEditing\n        ? ['fas', 'fa-check-square', 'submit-btn']\n        : ['fas', 'fa-edit', 'edit-btn'];\n    const archiveBtn = createElement('i', ['fas', 'fa-file-archive', 'archive-btn'], getFieldId(id, 'archive-btn'));\n    archiveBtn.setAttribute('title', archiveBtnTitle);\n    const deleteBtn = createElement('i',['fas', 'fa-trash-alt', 'delete-btn'], getFieldId(id, 'delete-btn'));\n    deleteBtn.setAttribute('title', 'Delete Note');\n    const editBtn = createElement('i', editBtnIconClasses, getFieldId(id, 'edit-btn'));\n    editBtn.setAttribute('title', 'Edit Note');\n\n    controllersBox.append(editBtn, archiveBtn, deleteBtn);\n    return controllersBox;\n}\n\n","import {getFieldId, getNoteItemId} from \"./renderNoteItem\";\nimport {categories} from \"./constants\";\n\n\nexport const createElement = (type = '', classes = [], id = '') => {\n    const el = document.createElement(type);\n    if (Array.isArray(classes) && classes.length) {\n        el.classList.add(...classes);\n    } else if (!Array.isArray(classes) && classes) el.classList.add(classes);\n    if (id) el.setAttribute('id', id);\n\n    return el;\n}\n\nexport const createItemTextField = (innerText, id, tag = 'input', readOnly = false) => {\n    const textBox = createElement('div', ['note-item__text-box', 'field-box']);\n    const textField = createElement(tag, 'note-item__text', id);\n    if (tag === 'input') {\n        textField.type = 'text';\n        textField.value = innerText;\n    } else {\n        textField.textContent = innerText;\n    }\n    if (readOnly) textField.setAttribute('readonly', 'true');\n    textField.setAttribute('title', innerText);\n\n    textBox.append(textField);\n    return textBox\n}\n\nexport const createItemSelect = (options = [], selected, id) => {\n    const box = createElement('div', ['note-item__text-box', 'field-box']);\n    const select = createElement('select', 'note-item__select', id);\n    let optionEl;\n    options.forEach(option => {\n        optionEl = createElement('option');\n        optionEl.value = selectCorrespondingCategoryKey(option);\n        optionEl.textContent = option;\n        if(selected === option) optionEl.selected = true;\n        select.append(optionEl);\n    });\n\n    box.append(select);\n    return box;\n}\n\nexport const createItemCategoryIcon = (category) => {\n    const box = createElement('div', ['note-item__field-box', 'note-item__category-icon-box']);\n    const icon = document.createElement('i');\n    switch (category) {\n        case categories.task:\n            icon.classList.add('fas', 'fa-tasks');\n            break;\n        case categories.idea:\n            icon.classList.add('fas', 'fa-lightbulb');\n            break;\n        case categories.randomThought:\n            icon.classList.add('fas', 'fa-code-branch');\n            break\n        default:\n            icon.classList.add('fas', 'fa-question');\n    }\n\n    box.append(icon);\n    return box;\n}\n\n//Selectors\nexport const getIdNumFromElementIdSelector = (idSelector) => {\n    const regExp = /^\\d+/;\n    const idNum = idSelector.match(regExp);\n    return idNum[0];\n}\nexport const selectNoteItemById = (eventIdSelector) => {\n    const idNum = getIdNumFromElementIdSelector(eventIdSelector);\n    return document.getElementById(getNoteItemId(idNum));\n}\nexport const selectField = (eventIdSelector, columnName) => {\n    const idNum = getIdNumFromElementIdSelector(eventIdSelector);\n    const idOfField = getFieldId(idNum, columnName.toLowerCase());\n    return document.getElementById(idOfField);\n}\nexport const selectCorrespondingCategoryKey = (category, noteCat = categories) => {\n    for (let cat in noteCat) if(noteCat[cat] === category) return cat;\n\n}","import {createElement} from \"./shared\";\nimport {columnNames, columnNamesStatistic, mainTableBox, statTableBox} from \"./constants\";\n\nexport const renderTableHeader = () => {\n    mainTableBox.prepend(getTableHeader(columnNames, true));\n    statTableBox.prepend(getTableHeader(columnNamesStatistic));\n}\n\nexport const getTableHeader = (columnNames, shouldAddControllers = false) => {\n    const tableHeader = createElement('div', 'table-header');\n    columnNames.forEach((name) => tableHeader.append(createColumnTitle(name)));\n    if(shouldAddControllers){\n        tableHeader.append(createColumnControllerPanel());\n    }\n\n    return tableHeader\n}\nconst createColumnTitle = (innerText) => {\n    const colTitleBox = createElement('div', 'table-header__title-box');\n\n    const title = createElement('h3', 'table-header__title');\n    title.textContent = innerText;\n\n    colTitleBox.append(title);\n    return colTitleBox;\n}\nconst createColumnControllerPanel = () => {\n    const controllersBox = createElement('div', 'table-header__controllers-box');\n\n    const archiveAllBtn = createElement('i', ['fas', 'fa-file-archive'], 'archiveAllBtn');\n    archiveAllBtn.setAttribute('title', 'Archive/Unzip All');\n\n    const deleteAllBtn = createElement('i', ['fas', 'fa-trash-alt'], 'deleteAllBtn');\n    deleteAllBtn.setAttribute('title', 'Delete All');\n\n    controllersBox.append(archiveAllBtn, deleteAllBtn);\n    return controllersBox;\n}","import {notes} from \"./store\";\nimport {categories, statTableBox} from \"./constants\";\nimport {createElement, createItemCategoryIcon, createItemTextField} from \"./shared\";\n\nexport const getStatItemId = (id) => `${id}__stat-item`;\nexport const getStatFieldId = (id, state) => `${id}__stat-item__${state}`;\n\nexport const renderStatItems = (notesArray = notes, noteCat = categories) => {\n    let active = 0;\n    let archived = 0;\n    const noteCatKeys = Object.keys(noteCat);\n    noteCatKeys.forEach(key => {\n        for (let i = 0; i < notesArray.length; i++) {\n            if (noteCat[key] === notesArray[i].category) {\n                if(notesArray[i].isActive){\n                    active++;\n                } else {\n                    archived++\n                }\n            }\n        }\n        statTableBox.append(getStatisticItem(noteCat[key], key, active, archived));\n        active = 0;\n        archived = 0;\n    })\n}\nconst getStatisticItem = (category, key,  active = 0, archived = 0) => {\n    const statItemBox = createElement('div', 'stat-item', getStatItemId(key));\n    statItemBox.append(\n        createItemCategoryIcon(category),\n        createItemTextField(category, getStatFieldId(key, 'category'), 'p'),\n        createItemTextField(active, getStatFieldId(key, 'active'), 'p'),\n        createItemTextField(archived, getStatFieldId(key, 'archived'), 'p')\n    );\n\n    return statItemBox;\n}","import {activeNotesBox, archivedNotesBox, categories, months, noteShape} from \"./constants\";\nimport {getStatFieldId} from \"./renderStatItem\";\nimport {getFieldId, getNoteItem} from \"./renderNoteItem\";\nimport {notes} from \"./store\";\nimport {\n    createItemCategoryIcon,\n    createItemSelect,\n    createItemTextField,\n    getIdNumFromElementIdSelector\n} from \"./shared\";\n\n\nexport const toggleEditNote = (noteItem, makeEditable = false, noteCat = categories) => {\n    const idNum = getIdNumFromElementIdSelector(noteItem.id);\n    const categoryField = document.getElementById(getFieldId(idNum, 'category'));\n    const inputsArr = noteItem.getElementsByTagName('input');\n    inputsArr[0].focus();\n    for (let i = 0; i < inputsArr.length; i++) {\n        inputsArr[i].readOnly = !makeEditable;\n        inputsArr[i].title = inputsArr[i].value;\n    }\n    if (makeEditable) {\n        noteItem.classList.add('editable');\n        const options = Object.keys(noteCat).map(cat => noteCat[cat]);\n        categoryField.parentNode.replaceWith(createItemSelect(options, categoryField.value, getFieldId(idNum, 'category')));\n    }\n    if (!makeEditable) {\n        noteItem.classList.remove('editable');\n        const selectedOptionText = categoryField.selectedOptions[0].textContent;\n        const toReplaceWith = createItemTextField(selectedOptionText, getFieldId(idNum, 'category'), 'input', true);\n        categoryField.parentNode.replaceWith(toReplaceWith);\n    }\n}\nexport const makePrevEditingItemReadOnly = () => {\n    const prevEditing = document.querySelectorAll('.editable');\n    if (prevEditing.length) {\n        toggleEditBtnIcon(prevEditing[0].querySelector('.submit-btn'));\n        toggleEditNote(prevEditing[0], false);\n    }\n}\nexport const toggleArchiving = (noteItem) => {\n    const noteItemCopy = noteItem.cloneNode(true);\n    if (noteItem.parentNode === activeNotesBox) {\n        noteItem.remove();\n        archivedNotesBox.prepend(noteItemCopy)\n    } else {\n        noteItem.remove();\n        activeNotesBox.prepend(noteItemCopy)\n    }\n}\nexport const deleteAllNotes = () => {\n    const currentSlide = document.querySelector('.current-slide');\n    currentSlide.querySelectorAll('.note-item').forEach(item => item.remove());\n}\nexport const createNewNote = () => {\n    const noteInfo = { ...noteShape };\n    const date = new Date();\n    noteInfo.id = notes.length + 1;\n    noteInfo.isActive = true;\n    noteInfo.created = `${date.getDate()} ${months[date.getMonth()]} ${date.getFullYear()}`;\n    noteInfo.category = categories.task;\n    notes.push(noteInfo);\n    const noteItem = getNoteItem(noteInfo, true);\n    activeNotesBox.prepend(noteItem);\n    noteItem.querySelector('input').focus();\n}\nexport const changeNoteCategoryWithSelect = (value, noteItem, noteCat = categories) => {\n    noteItem.setAttribute('data-category', value);\n    const icon = noteItem.querySelector('.note-item__category-icon-box').getElementsByTagName('i')[0];\n    const newIcon = createItemCategoryIcon(noteCat[value]);\n    icon.replaceWith(newIcon);\n}\nexport const toggleEditBtnIcon = (editBtnElement) => {\n    if (editBtnElement.classList.contains('edit-btn')) {\n        editBtnElement.classList.remove('fas', 'fa-edit', 'edit-btn');\n        editBtnElement.classList.add('fas', 'fa-check-square', 'submit-btn');\n    } else {\n        editBtnElement.classList.remove('fas', 'fa-check-square', 'submit-btn');\n        editBtnElement.classList.add('fas', 'fa-edit', 'edit-btn');\n    }\n\n}\nexport const countNotesByCategory = (category) => {\n    const active = activeNotesBox.querySelectorAll(`div[data-category=${category}]`).length + '';\n    const archived = archivedNotesBox.querySelectorAll(`div[data-category=${category}]`).length + '';\n    return {\n        category,\n        active,\n        archived\n    }\n}\nexport const setStatItemDataByCategory = (category = [], actAndArch = { active: '', archived: '' }) => {\n    category.forEach(cat => {\n        if (actAndArch.active) {\n            document.getElementById(getStatFieldId(cat, 'active')).textContent = actAndArch.active + '';\n        }\n        if (actAndArch.archived) {\n            document.getElementById(getStatFieldId(cat, 'archived')).textContent = actAndArch.archived + '';\n        }\n    })\n}\n\n","import {selectField, selectNoteItemById} from \"./shared\";\nimport {\n    changeNoteCategoryWithSelect,\n    countNotesByCategory, createNewNote, deleteAllNotes,\n    makePrevEditingItemReadOnly, setStatItemDataByCategory, toggleArchiving, toggleEditBtnIcon,\n    toggleEditNote\n} from \"./actions\";\nimport {activeNotesBox, archivedNotesBox, categories, createNoteBtn, shiftTableBtn} from \"./constants\";\nimport {getDateFromItemContent, setDatesField} from \"./renderNoteItem\";\n\n\nexport const toggleEditNoteOnClick = (e) => {\n    if (e.target.classList.contains('edit-btn')) {\n        toggleEditBtnIcon(e.target);\n        toggleEditNoteOnEvent(selectNoteItemById(e.target.id));\n        return;\n    }\n    if (e.target.classList.contains('submit-btn')) {\n        const contentText = selectField(e.target.id, 'content').value;\n        if (contentText) {\n            const dates = getDateFromItemContent(contentText);\n            setDatesField(dates, e.target.id);\n        }\n        toggleEditBtnIcon(e.target);\n        toggleEditNote(selectNoteItemById(e.target.id), false);\n        updateStats();\n    }\n}\nexport const toggleEditNoteOnEvent = (noteItem) => {\n    const makeEditable = !noteItem.classList.contains('editable');\n    makePrevEditingItemReadOnly();\n    toggleEditNote(noteItem, makeEditable);\n}\nexport const updateStats = () => {\n    const stats = Object.keys(categories).map(cat => countNotesByCategory(cat));\n    stats.forEach(stat => {\n        setStatItemDataByCategory([stat.category], { active: stat.active, archived: stat.archived });\n    })\n}\nexport const toggleArchivingOnClick = (e) => {\n    if (e && e.target.classList.contains('archive-btn')) {\n        const noteItem = selectNoteItemById(e.target.id);\n        toggleArchiving(noteItem);\n        updateStats(selectNoteItemById(e.target.id));\n    }\n}\nexport const toggleArchivingAllOnClick = (e) => {\n    if (e.target.id === 'archiveAllBtn') {\n        const currentSlide = document.querySelector('.current-slide');\n        const noteItemsArr = currentSlide.querySelectorAll('.note-item');\n        noteItemsArr.forEach(item => toggleArchiving(item));\n        updateStats();\n    }\n}\nexport const deleteNoteOnClick = (e) => {\n    if(e.target.classList.contains('delete-btn')){\n        const noteItem = selectNoteItemById(e.target.id);\n        noteItem.classList.add('note-item--removing');\n        setTimeout(() => {\n            noteItem.remove();\n            updateStats();\n        }, 100);\n\n    }\n}\nexport const deleteAllNotesOnClick = (e) => {\n    if(e.target.id === 'deleteAllBtn'){\n        deleteAllNotes();\n        updateStats();\n    }\n}\nexport const selectOnChange = (e) => {\n    if(e.target.classList.contains('note-item__select')){\n        const noteItem = selectNoteItemById(e.target.id);\n        changeNoteCategoryWithSelect(e.target.value, noteItem);\n    }\n}\nexport const createNewNoteOnClick = async (e) => {\n    try {\n        await makePrevEditingItemReadOnly();\n        createNewNote(e);\n        updateStats();\n    } catch (error) {\n        console.log(error)\n    }\n}\nexport const shiftBetweenActiveAndArchivedNotes = () => {\n    shiftTableBtn.classList.toggle('active');\n    createNoteBtn.classList.toggle('disabled');\n    if (activeNotesBox.classList.contains('current-slide')) {\n        activeNotesBox.classList.remove('current-slide');\n        archivedNotesBox.classList.add('current-slide');\n    } else {\n        archivedNotesBox.classList.remove('current-slide');\n        activeNotesBox.classList.add('current-slide');\n    }\n}\n","import 'regenerator-runtime/runtime';\nimport {renderTableHeader} from \"./renderTableHeader\";\nimport {renderNoteItems} from \"./renderNoteItem\";\nimport {createNoteBtn, mainTableBox, shiftTableBtn} from \"./constants\";\nimport {renderStatItems} from \"./renderStatItem\";\nimport {\n    createNewNoteOnClick, deleteAllNotesOnClick, deleteNoteOnClick, selectOnChange,\n    shiftBetweenActiveAndArchivedNotes, toggleArchivingAllOnClick,\n    toggleArchivingOnClick,\n    toggleEditNoteOnClick\n} from \"./listenerFunctions\";\n\n\nrenderTableHeader();\nrenderNoteItems();\nrenderStatItems();\n\ncreateNoteBtn.addEventListener('click', createNewNoteOnClick);\nshiftTableBtn.addEventListener('click', shiftBetweenActiveAndArchivedNotes);\n\nmainTableBox.addEventListener('click', (e) => {\n   toggleEditNoteOnClick(e);\n   toggleArchivingOnClick(e);\n   toggleArchivingAllOnClick(e);\n   deleteNoteOnClick(e);\n   deleteAllNotesOnClick(e);\n});\nmainTableBox.addEventListener('change',  selectOnChange);\n"]}